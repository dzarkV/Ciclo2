/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.DTController;
import static controller.EquipoController.updateCombo;
import controller.JugadorController;
import java.awt.HeadlessException;
import java.util.Calendar;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import model.DT;
import model.Jugador;

/**
 *
 * @author dzark
 */
public class UpdateView extends javax.swing.JFrame {
    
    private ArrayList<String> equipos;

    /**
     * Creates new form UpdateView
     */
    public UpdateView() {
        initComponents();
        this.setLocationRelativeTo(null); //para centrar la ventana
        
        /* Inicialización de la ventana con cada equipo de la BD 
        como opción en el combobox */
        equipos = updateCombo();
        equipos.forEach((s) -> {
            ComboBoxUpdateView.addItem(s);      
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        backUpdateView = new javax.swing.JButton();
        ComboBoxUpdateView = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        buttonLoadDataUpdateView = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        idUpdateDT = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        nameUpdateDT = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        lastnameUpdateDT = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        birthdateUpdateDT = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        monthUpdateDT = new com.toedter.calendar.JMonthChooser();
        jLabel9 = new javax.swing.JLabel();
        yearUpdateDT = new com.toedter.calendar.JYearChooser();
        jSeparator1 = new javax.swing.JSeparator();
        ComboBoxUpdateJugadores = new javax.swing.JComboBox<>();
        UploadJugador = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        idUpdateJugador = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        nameUpdateJugador = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        lastnameUpdateJugador = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        birthdateUpdateJugador = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        positionUpdateJugador = new javax.swing.JTextField();
        buttonUpdateViewDT = new javax.swing.JButton();
        buttonUpdateViewJugador = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Actualizar", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Fira Mono", 1, 14))); // NOI18N

        backUpdateView.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        backUpdateView.setText("Volver");
        backUpdateView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backUpdateViewActionPerformed(evt);
            }
        });

        ComboBoxUpdateView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxUpdateViewActionPerformed(evt);
            }
        });

        jLabel1.setText("Seleccione el equipo");

        buttonLoadDataUpdateView.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        buttonLoadDataUpdateView.setText("Cargar datos");
        buttonLoadDataUpdateView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLoadDataUpdateViewActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Fira Mono", 1, 14)); // NOI18N
        jLabel2.setText("Jugadores");

        jLabel3.setFont(new java.awt.Font("Fira Mono", 1, 14)); // NOI18N
        jLabel3.setText("Director técnico");

        jLabel4.setText("Identificación");

        idUpdateDT.setEditable(false);
        idUpdateDT.setToolTipText("Identificación por defecto");
        idUpdateDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idUpdateDTActionPerformed(evt);
            }
        });

        jLabel5.setText("Nombre");

        jLabel6.setText("Apellido");

        lastnameUpdateDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastnameUpdateDTActionPerformed(evt);
            }
        });

        jLabel7.setText("Fecha de nacimiento");

        jLabel8.setText("Mes de contratación");

        jLabel9.setText("Año de contratación");

        UploadJugador.setText("Cargar jugador");
        UploadJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UploadJugadorActionPerformed(evt);
            }
        });

        jLabel10.setText("Identificación");

        idUpdateJugador.setEditable(false);
        idUpdateJugador.setToolTipText("Identificación por defecto");
        idUpdateJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idUpdateJugadorActionPerformed(evt);
            }
        });

        jLabel11.setText("Nombre");

        jLabel12.setText("Apellido");

        lastnameUpdateJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastnameUpdateJugadorActionPerformed(evt);
            }
        });

        jLabel13.setText("Fecha de nacimiento");

        jLabel14.setText("Posición");

        positionUpdateJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                positionUpdateJugadorActionPerformed(evt);
            }
        });

        buttonUpdateViewDT.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        buttonUpdateViewDT.setText("Actualizar Director técnico");
        buttonUpdateViewDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateViewDTActionPerformed(evt);
            }
        });

        buttonUpdateViewJugador.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        buttonUpdateViewJugador.setText("Actualizar Jugador");
        buttonUpdateViewJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateViewJugadorActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(ComboBoxUpdateView, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(buttonLoadDataUpdateView)
                .addGap(46, 46, 46))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(buttonUpdateViewDT))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(idUpdateDT, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nameUpdateDT, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addGap(56, 56, 56)
                                    .addComponent(lastnameUpdateDT, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(birthdateUpdateDT, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel9))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(yearUpdateDT, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(monthUpdateDT, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ComboBoxUpdateJugadores, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(58, 58, 58))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(UploadJugador)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(backUpdateView)
                                .addGap(18, 18, 18)
                                .addComponent(buttonUpdateViewJugador)
                                .addGap(38, 38, 38))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(56, 56, 56)
                                .addComponent(lastnameUpdateJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(birthdateUpdateJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(idUpdateJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nameUpdateJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(56, 56, 56)
                                .addComponent(positionUpdateJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ComboBoxUpdateView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonLoadDataUpdateView))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(idUpdateDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ComboBoxUpdateJugadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(nameUpdateDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(UploadJugador)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lastnameUpdateDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(24, 24, 24)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(birthdateUpdateDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(monthUpdateDT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(jLabel8)))
                                .addGap(38, 38, 38)
                                .addComponent(jLabel9))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(193, 193, 193)
                                .addComponent(yearUpdateDT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(idUpdateJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel11)
                                    .addComponent(nameUpdateJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(21, 21, 21)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lastnameUpdateJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12))
                                .addGap(24, 24, 24)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel13)
                                    .addComponent(birthdateUpdateJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(positionUpdateJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(backUpdateView)
                            .addComponent(buttonUpdateViewDT)
                            .addComponent(buttonUpdateViewJugador))
                        .addContainerGap())
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backUpdateViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backUpdateViewActionPerformed
        TournamentView tournamentview = new TournamentView();
        tournamentview.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backUpdateViewActionPerformed

    private void ComboBoxUpdateViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxUpdateViewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxUpdateViewActionPerformed

    /**
     * Método para cargar los datos del DT del equipo seleccionado
     * @param evt 
     */
    private void buttonLoadDataUpdateViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLoadDataUpdateViewActionPerformed

        /**
         * Limpiar los datos del jugador
         */
        idUpdateJugador.setText("");
        nameUpdateJugador.setText("");
        lastnameUpdateJugador.setText("");
        positionUpdateJugador.setText("");
        
        
        String selection = ComboBoxUpdateView.getSelectedItem().toString();

        /**
        * Proceso para cargar los datos de jugadores, según selección en combobox
        * con borrado y actualizado del combobox de jugadores en la vista cada que da clic
        */
        JugadorController jdc = new JugadorController();
        List<Jugador> jugadoresCombobox = jdc.readJugadores(selection);
        
        DefaultComboBoxModel m = (DefaultComboBoxModel) ComboBoxUpdateJugadores.getModel() ;
       
        m.removeAllElements() ;
        
        jugadoresCombobox.forEach((j) -> {
            ComboBoxUpdateJugadores.addItem(j.getNombre() + " " + j.getApellido() );
        });
        
        /**
        * Proceso para cargar los datos de DT, según selección de equipo en combobox
        */
        DTController dtc = new DTController();
        
        DT dtSelected = dtc.readDT(selection); 
        
        if(dtSelected.getId()== null){
            JOptionPane.showMessageDialog(null, "El equipo " + selection + " no tiene director técnico");
        } else{
            
            idUpdateDT.setText(dtSelected.getId().toString() );
            nameUpdateDT.setText(dtSelected.getNombre());
            lastnameUpdateDT.setText(dtSelected.getApellido());
            birthdateUpdateDT.setDate(dtSelected.getFechaNacimiento() );
            monthUpdateDT.setMonth(dtSelected.getMesContrato()- 1);
            yearUpdateDT.setYear(dtSelected.getAnioContrato()); 
            
        }
            
    }//GEN-LAST:event_buttonLoadDataUpdateViewActionPerformed

    private void idUpdateDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idUpdateDTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idUpdateDTActionPerformed

    private void lastnameUpdateDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastnameUpdateDTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastnameUpdateDTActionPerformed

    /**
     * Método para cargar los datos del jugador seleccionado
     * @param evt 
    */
    private void UploadJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UploadJugadorActionPerformed
        
        try{
        String selection = ComboBoxUpdateView.getSelectedItem().toString();
        
        /**
         * Procedimiento para obtener los datos del jugador seleccionado usando el metodo readJugadores ya creado
         */
        JugadorController jgc = new JugadorController();
        List<Jugador> jugadorUpdate = jgc.readJugadores(selection);
        String jgSelected = ComboBoxUpdateJugadores.getSelectedItem().toString() ;
        
        jugadorUpdate.forEach((j) -> {
            String jgCompared = j.getNombre() + " " + j.getApellido() ;
            if ( jgCompared.equals(jgSelected) )
            {
                idUpdateJugador.setText( j.getId().toString() );
                nameUpdateJugador.setText( j.getNombre() );
                lastnameUpdateJugador.setText( j.getApellido());
                birthdateUpdateJugador.setDate( j.getFechaNacimiento() );
                positionUpdateJugador.setText( j.getPosicion() );
            }
        });
        } catch (Exception ex){
            //System.out.println(ex);
            JOptionPane.showMessageDialog(null, "No ha seleccionado y cargado un equipo");
        }
        
        
    }//GEN-LAST:event_UploadJugadorActionPerformed

    private void idUpdateJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idUpdateJugadorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idUpdateJugadorActionPerformed

    private void lastnameUpdateJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastnameUpdateJugadorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastnameUpdateJugadorActionPerformed

    private void positionUpdateJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_positionUpdateJugadorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_positionUpdateJugadorActionPerformed
    
    /**
     * Método para actualizar DT del equipo seleccionado
     * @param evt 
     */
    private void buttonUpdateViewDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateViewDTActionPerformed
       try
       {
           
           String entry = idUpdateDT.getText() ;
        if("".equals(entry) ){
            JOptionPane.showMessageDialog(null, "No ha seleccionado y cargado los datos del equipo");
        } else {
            
            /**
             * Se obtienen los datos ingresados para enviar el objeto dt a actualizar
             */
            DTController dtc = new DTController();
            String nombre = nameUpdateDT.getText();
            String apellido = lastnameUpdateDT.getText();
            Calendar DTcal = birthdateUpdateDT.getCalendar();
            Date Sqldate = CreateView.fromCalendartoSql(DTcal);
            Integer mesContrato = monthUpdateDT.getMonth() + 1 ;
            Integer anioContrato = yearUpdateDT.getYear();
            Integer id = Integer.parseInt(idUpdateDT.getText()) ;
            DT dt = new DT(id, nombre, apellido, Sqldate, mesContrato, anioContrato);
        
            dtc.updateDTC(dt) ;
        
            JOptionPane.showMessageDialog(null, "El director técnido " + nombre + " " + apellido + " fue actualizado exitosamente");
        }
       } catch (HeadlessException | NumberFormatException ex){
           System.out.println(ex);
           JOptionPane.showMessageDialog(null, "No ha seleccionado y cargado los datos del equipo");
       }
    }//GEN-LAST:event_buttonUpdateViewDTActionPerformed
    
    /**
     * Método para actualizar jugador seleccionado
     * @param evt 
     */
    private void buttonUpdateViewJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateViewJugadorActionPerformed
        try
       {
           String entry = idUpdateJugador.getText() ;
        if("".equals(entry) ){
            JOptionPane.showMessageDialog(null, "No ha seleccionado y cargado los datos del jugador");
        } else {
            
            /**
             * Se obtienen los datos ingresados para enviar el objeto jg a actualizar
             */
            JugadorController jgc = new JugadorController();
            String nombre = nameUpdateJugador.getText();
            String apellido = lastnameUpdateJugador.getText();
            Calendar Jugcal = birthdateUpdateJugador.getCalendar();
            Date Sqldate = CreateView.fromCalendartoSql(Jugcal);
            String posicion = positionUpdateJugador.getText();
            Integer id = Integer.parseInt(idUpdateJugador.getText()) ;
            Jugador jg = new Jugador(id, nombre, apellido, Sqldate, posicion);
        
            jgc.updateJugadorC(jg) ;
        
            JOptionPane.showMessageDialog(null, "El jugador " + nombre + " " + apellido + " fue actualizado exitosamente");
        }
       } catch (HeadlessException | NumberFormatException ex){
           //System.out.println(ex);
           JOptionPane.showMessageDialog(null, "No ha seleccionado y cargado los datos del jugador");
       }
        
    }//GEN-LAST:event_buttonUpdateViewJugadorActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(UpdateView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(UpdateView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(UpdateView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(UpdateView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new UpdateView().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBoxUpdateJugadores;
    private javax.swing.JComboBox<String> ComboBoxUpdateView;
    private javax.swing.JButton UploadJugador;
    private javax.swing.JButton backUpdateView;
    private com.toedter.calendar.JDateChooser birthdateUpdateDT;
    private com.toedter.calendar.JDateChooser birthdateUpdateJugador;
    private javax.swing.JButton buttonLoadDataUpdateView;
    private javax.swing.JButton buttonUpdateViewDT;
    private javax.swing.JButton buttonUpdateViewJugador;
    private javax.swing.JTextField idUpdateDT;
    private javax.swing.JTextField idUpdateJugador;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField lastnameUpdateDT;
    private javax.swing.JTextField lastnameUpdateJugador;
    private com.toedter.calendar.JMonthChooser monthUpdateDT;
    private javax.swing.JTextField nameUpdateDT;
    private javax.swing.JTextField nameUpdateJugador;
    private javax.swing.JTextField positionUpdateJugador;
    private com.toedter.calendar.JYearChooser yearUpdateDT;
    // End of variables declaration//GEN-END:variables
}
